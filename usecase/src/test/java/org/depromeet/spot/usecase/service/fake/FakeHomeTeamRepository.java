package org.depromeet.spot.usecase.service.fake;

import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.concurrent.atomic.AtomicLong;
import java.util.stream.Collectors;

import org.depromeet.spot.domain.stadium.Stadium;
import org.depromeet.spot.domain.team.BaseballTeam;
import org.depromeet.spot.domain.team.StadiumHomeTeam;
import org.depromeet.spot.usecase.port.out.team.HomeTeamRepository;

public class FakeHomeTeamRepository implements HomeTeamRepository {

    private final AtomicLong autoGeneratedId = new AtomicLong(0);
    private final List<StadiumHomeTeam> data = Collections.synchronizedList(new ArrayList<>());

    private final Map<Stadium, List<BaseballTeam>> homeTeamMap =
            Collections.synchronizedMap(new HashMap<>());

    @Override
    public List<BaseballTeam> findAllHomeTeamByStadium(Long stadiumId) {
        return homeTeamMap.entrySet().stream()
                .filter(entry -> stadiumId.equals(entry.getKey().getId()))
                .flatMap(entry -> entry.getValue().stream())
                .collect(Collectors.toList());
    }

    @Override
    public Map<Stadium, List<BaseballTeam>> findAllStadiumHomeTeam() {
        return homeTeamMap;
    }

    @Override
    public void saveAll(List<StadiumHomeTeam> homeTeams) {
        homeTeams.forEach(this::save);
    }

    private StadiumHomeTeam save(StadiumHomeTeam homeTeam) {
        if (homeTeam.getId() == null || homeTeam.getId() == 0) {
            StadiumHomeTeam newHomeTeam =
                    StadiumHomeTeam.builder()
                            .id(autoGeneratedId.incrementAndGet())
                            .stadiumId(homeTeam.getStadiumId())
                            .teamId(homeTeam.getTeamId())
                            .build();
            data.add(newHomeTeam);
            return newHomeTeam;
        } else {
            data.removeIf(item -> Objects.equals(item.getId(), homeTeam.getId()));
            data.add(homeTeam);
            return homeTeam;
        }
    }
}
